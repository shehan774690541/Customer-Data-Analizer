
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author user
 */
public class home extends javax.swing.JFrame {

    /**
     * Creates new form home
     */
    public home() {
        initComponents();
        jTabbedPane1.setEnabled(false);
        btnStop.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblLink = new javax.swing.JTextField();
        lblPort = new javax.swing.JTextField();
        lblUser = new javax.swing.JTextField();
        lblPassword = new javax.swing.JPasswordField();
        btnStart1 = new javax.swing.JButton();
        btnStart = new javax.swing.JButton();
        btnStop = new javax.swing.JButton();
        lblstatus_login = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtIndex = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtBrand = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        ithemTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        txtDiscount = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtName = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        manage_name = new javax.swing.JTextField();
        manage_ID = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        manage_changeCount = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        stockTable = new javax.swing.JTable();
        jButton7 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        ithemStatus = new javax.swing.JTextArea();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        customer_IthemsTable = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        customer_selectedIthemsTable = new javax.swing.JTable();
        jPanel10 = new javax.swing.JPanel();
        search_customIthems = new javax.swing.JTextField();
        btn_customerSearch = new javax.swing.JButton();
        cartSearch = new javax.swing.JTextField();
        jButton11 = new javax.swing.JButton();
        custom_addCart = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        ithem_count = new javax.swing.JTextField();
        jButton16 = new javax.swing.JButton();
        viewTotalPrice = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        customerSummary = new javax.swing.JTextArea();
        addDiscount = new javax.swing.JCheckBox();
        txtCustomDiscount = new javax.swing.JTextField();
        customDiscount = new javax.swing.JCheckBox();
        jButton17 = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        orderSummary = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel6.setBackground(new java.awt.Color(204, 255, 204));

        jLabel4.setFont(new java.awt.Font("Corbel", 0, 24)); // NOI18N
        jLabel4.setText("Login To Database");

        jLabel5.setFont(new java.awt.Font("Corbel", 0, 20)); // NOI18N
        jLabel5.setText("Link / port");

        jLabel6.setFont(new java.awt.Font("Corbel", 0, 20)); // NOI18N
        jLabel6.setText("User Name");

        jLabel7.setFont(new java.awt.Font("Corbel", 0, 20)); // NOI18N
        jLabel7.setText("Password");

        lblLink.setFont(new java.awt.Font("Corbel", 0, 20)); // NOI18N
        lblLink.setText("jdbc:mysql://localhost");

        lblPort.setFont(new java.awt.Font("Corbel", 0, 20)); // NOI18N
        lblPort.setText("3306");

        lblUser.setFont(new java.awt.Font("Corbel", 0, 20)); // NOI18N

        lblPassword.setFont(new java.awt.Font("Corbel", 0, 20)); // NOI18N

        btnStart1.setFont(new java.awt.Font("Corbel", 0, 20)); // NOI18N
        btnStart1.setText("Connect");
        btnStart1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStart1ActionPerformed(evt);
            }
        });

        btnStart.setFont(new java.awt.Font("Corbel", 0, 20)); // NOI18N
        btnStart.setText("Start");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        btnStop.setFont(new java.awt.Font("Corbel", 0, 20)); // NOI18N
        btnStop.setText("Stop");
        btnStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(btnStart1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnStart)
                                .addGap(44, 44, 44)
                                .addComponent(btnStop))
                            .addComponent(lblPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblUser, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(lblLink, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblPort, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(158, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblstatus_login, javax.swing.GroupLayout.PREFERRED_SIZE, 703, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel4)
                .addGap(34, 34, 34)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLink, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnStart)
                    .addComponent(btnStop)
                    .addComponent(btnStart1))
                .addGap(29, 29, 29)
                .addComponent(lblstatus_login, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(182, 182, 182)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(211, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(198, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("LOGin", jPanel3);

        jPanel4.setBackground(new java.awt.Color(255, 204, 204));

        jPanel2.setBackground(new java.awt.Color(204, 255, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Ithem Pannel");

        txtIndex.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtIndex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIndexActionPerformed(evt);
            }
        });
        txtIndex.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtIndexKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIndexKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Ithen Name");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Ithem Brand");

        txtBrand.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Ithem Price");

        txtPrice.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        ithemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ithem Index", "Ithem Name", "Ithem Brand", "Ithem Price", "Discount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Float.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ithemTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ithemTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ithemTable);
        if (ithemTable.getColumnModel().getColumnCount() > 0) {
            ithemTable.getColumnModel().getColumn(0).setMinWidth(30);
            ithemTable.getColumnModel().getColumn(0).setPreferredWidth(75);
            ithemTable.getColumnModel().getColumn(0).setMaxWidth(75);
            ithemTable.getColumnModel().getColumn(3).setMinWidth(100);
            ithemTable.getColumnModel().getColumn(3).setPreferredWidth(100);
            ithemTable.getColumnModel().getColumn(3).setMaxWidth(100);
            ithemTable.getColumnModel().getColumn(4).setMinWidth(100);
            ithemTable.getColumnModel().getColumn(4).setPreferredWidth(100);
            ithemTable.getColumnModel().getColumn(4).setMaxWidth(100);
        }

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("SAVE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton2.setText("CLEAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton3.setText("SEARCH");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Ithem Index");

        txtDiscount.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("Discount");

        jButton8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton8.setText("DELET");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel18.setText("%");

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel19.setText("LKR");

        txtName.setColumns(20);
        txtName.setRows(5);
        jScrollPane4.setViewportView(txtName);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(txtPrice, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtDiscount, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtBrand, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(25, 25, 25))
                            .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane4)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtIndex, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton3)))
                        .addGap(0, 12, Short.MAX_VALUE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(310, 310, 310)
                        .addComponent(jLabel1)
                        .addGap(352, 352, 352))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 757, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtIndex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)
                        .addGap(11, 11, 11)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(txtDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2)
                            .addComponent(jButton8)
                            .addComponent(jButton3))
                        .addGap(41, 41, 41))))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(637, 637, 637)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Add New", jPanel4);

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel10.setText("Ithems Management");

        manage_name.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        manage_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                manage_nameKeyReleased(evt);
            }
        });

        manage_ID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Search Using ID");

        jButton4.setText("Search");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Change Added Stock");

        manage_changeCount.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jButton6.setText("Change");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        stockTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Ithem Name", "Ithem Brand", "Stock"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        stockTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stockTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(stockTable);
        if (stockTable.getColumnModel().getColumnCount() > 0) {
            stockTable.getColumnModel().getColumn(0).setMinWidth(30);
            stockTable.getColumnModel().getColumn(0).setPreferredWidth(75);
            stockTable.getColumnModel().getColumn(0).setMaxWidth(75);
            stockTable.getColumnModel().getColumn(3).setMinWidth(10);
            stockTable.getColumnModel().getColumn(3).setPreferredWidth(50);
            stockTable.getColumnModel().getColumn(3).setMaxWidth(50);
        }

        jButton7.setText("SAVE");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton9.setText("CLEAR");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("REFRESH");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        ithemStatus.setColumns(20);
        ithemStatus.setRows(5);
        jScrollPane2.setViewportView(ithemStatus);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(4, 4, 4)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(manage_ID, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(32, 32, 32)
                                            .addComponent(jButton4))
                                        .addComponent(jLabel11)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(manage_changeCount, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(32, 32, 32)
                                        .addComponent(jButton6)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jButton7)
                                    .addGap(58, 58, 58)
                                    .addComponent(jButton10)
                                    .addGap(52, 52, 52)
                                    .addComponent(jButton9)))
                            .addComponent(manage_name, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(jLabel10)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 667, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabel10)
                .addGap(38, 38, 38)
                .addComponent(manage_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(manage_ID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4))
                .addGap(39, 39, 39)
                .addComponent(jLabel14)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(manage_changeCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6))
                .addGap(62, 62, 62)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton7)
                    .addComponent(jButton9)
                    .addComponent(jButton10))
                .addGap(49, 49, 49))
            .addComponent(jScrollPane3)
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Ithem Management", jPanel9);

        customer_IthemsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Ithem", "Brand", "Price", "Discount", "ithem Count"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Float.class, java.lang.Float.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        customer_IthemsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                customer_IthemsTableMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(customer_IthemsTable);
        if (customer_IthemsTable.getColumnModel().getColumnCount() > 0) {
            customer_IthemsTable.getColumnModel().getColumn(0).setMinWidth(30);
            customer_IthemsTable.getColumnModel().getColumn(0).setPreferredWidth(40);
            customer_IthemsTable.getColumnModel().getColumn(0).setMaxWidth(50);
            customer_IthemsTable.getColumnModel().getColumn(4).setMinWidth(50);
            customer_IthemsTable.getColumnModel().getColumn(4).setPreferredWidth(60);
            customer_IthemsTable.getColumnModel().getColumn(4).setMaxWidth(80);
            customer_IthemsTable.getColumnModel().getColumn(5).setMinWidth(35);
            customer_IthemsTable.getColumnModel().getColumn(5).setPreferredWidth(50);
            customer_IthemsTable.getColumnModel().getColumn(5).setMaxWidth(80);
        }

        customer_selectedIthemsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Ithem", "Brand", "Ithem Count", "Pice", "*"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        customer_selectedIthemsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                customer_selectedIthemsTableMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(customer_selectedIthemsTable);
        if (customer_selectedIthemsTable.getColumnModel().getColumnCount() > 0) {
            customer_selectedIthemsTable.getColumnModel().getColumn(5).setHeaderValue("*");
        }

        jPanel10.setBackground(new java.awt.Color(204, 255, 204));

        search_customIthems.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                search_customIthemsKeyReleased(evt);
            }
        });

        btn_customerSearch.setText("Search Ithem");
        btn_customerSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_customerSearchActionPerformed(evt);
            }
        });

        cartSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cartSearchKeyReleased(evt);
            }
        });

        jButton11.setText("Search Ithem");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        custom_addCart.setText("Add To Cart");
        custom_addCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                custom_addCartActionPerformed(evt);
            }
        });

        jButton13.setText("Remove In Cart");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton14.setText("Clear Cart");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton15.setText("Refresh Ithem List");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jButton16.setText("Ithem Count");

        viewTotalPrice.setEditable(false);

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("PRICE :");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("LKR");

        jButton5.setText("CART");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(search_customIthems, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(viewTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ithem_count, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(btn_customerSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                        .addComponent(cartSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jButton16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(custom_addCart)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton13)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton11)
                    .addComponent(jButton5))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(search_customIthems, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_customerSearch)
                    .addComponent(cartSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(custom_addCart)
                    .addComponent(jButton13)
                    .addComponent(jButton14)
                    .addComponent(jButton15)
                    .addComponent(ithem_count, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton16)
                    .addComponent(viewTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel15)
                    .addComponent(jButton5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel11.setBackground(new java.awt.Color(204, 255, 204));

        customerSummary.setColumns(20);
        customerSummary.setRows(5);
        jScrollPane6.setViewportView(customerSummary);

        addDiscount.setSelected(true);
        addDiscount.setText("Add Discount");
        addDiscount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addDiscountMouseClicked(evt);
            }
        });
        addDiscount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDiscountActionPerformed(evt);
            }
        });

        txtCustomDiscount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCustomDiscountKeyReleased(evt);
            }
        });

        customDiscount.setText("Custom Discount");
        customDiscount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                customDiscountMouseClicked(evt);
            }
        });

        jButton17.setText("BUY");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        orderSummary.setColumns(20);
        orderSummary.setRows(5);
        jScrollPane8.setViewportView(orderSummary);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jScrollPane8)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(addDiscount)
                        .addGap(47, 47, 47)
                        .addComponent(txtCustomDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(customDiscount)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton17)
                        .addGap(19, 19, 19))))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addDiscount)
                            .addComponent(txtCustomDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customDiscount)
                            .addComponent(jButton17)))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jScrollPane5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 585, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Customers", jPanel7);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 1134, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        ithems_delet();
        table_ithems();
        clear_ithem();
        table_manageIthem();
        updateCustomerTable();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        table_ithems();
        ithem_search();
//        jButton8.setEnabled(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        clear_ithem();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        addData();
        //        JOptionPane.showMessageDialog(null, "Data Aded!1", "Error", JOptionPane.ERROR_MESSAGE);
        table_ithems();
        table_manageIthem();
        updateCustomerTable();
        //        JOptionPane.showMessageDialog(null, "Data Aded!2", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopActionPerformed
        // TODO add your handling code here:
        try {
            btnStop.setEnabled(false);
            jTabbedPane1.setEnabled(false);
            btnStart.setEnabled(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnStopActionPerformed

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        connect();
        table_ithems();
        jButton8.setEnabled(false);
        ithemTable.setAutoCreateRowSorter(true);
        table_manageIthem();
        stockTable.setAutoCreateRowSorter(true);
        updateCustomerTable();
        customer_IthemsTable.setAutoCreateRowSorter(true);
        clickRowCustomerTable();
        customer_selectedIthemsTable.setAutoCreateRowSorter(true);
        jTabbedPane1.setEnabled(true);
        customDiscount.setEnabled(false);
        txtCustomDiscount.setEnabled(false);
        btnStart.setEnabled(false);
        lblstatus_login.setText("Applicaton Started!!");
    }//GEN-LAST:event_btnStartActionPerformed

    private void btnStart1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStart1ActionPerformed
        // TODO add your handling code here:
        connect();
//        jButton8.setEnabled(true);
    }//GEN-LAST:event_btnStart1ActionPerformed

    private void txtIndexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIndexActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIndexActionPerformed

    private void txtIndexKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIndexKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIndexKeyTyped

    private void txtIndexKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIndexKeyReleased
        // TODO add your handling code here:
//        ithem_search();
    }//GEN-LAST:event_txtIndexKeyReleased

    private void ithemTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ithemTableMouseClicked
        // TODO add your handling code here:
        stock_filter();
//         JOptionPane.showMessageDialog(null, "click : Check index|" + index + "|" , "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_ithemTableMouseClicked

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        stock_clear();
        DefaultTableModel model = (DefaultTableModel) stockTable.getModel();

//        model.setRowCount(0);
        stock_filter();
        table_manageIthem();

    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) stockTable.getModel();
        model.setRowCount(0);
        table_manageIthem();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        stock_management();
        table_manageIthem();
        updateCustomerTable();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        stock_search();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void stockTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stockTableMouseClicked
        // TODO add your handling code here:
        int index = stockTable.getSelectedRow();
        TableModel model = stockTable.getModel();
        String table_id = model.getValueAt(index, 0).toString();
        int int_stockID = Integer.parseInt(table_id);

        try {
            String url = lblLink.getText() + ":" + lblPort.getText() + "/shop";
            String user = lblUser.getText();
            String password = lblPassword.getText();

            Connection con = DriverManager.getConnection(url, user, password);
            String query = "SELECT * FROM ithems WHERE ID = ?";
            PreparedStatement pstmt = con.prepareStatement(query);
            pstmt.setInt(1, int_stockID); // set the value of the first parameter to 1
            ResultSet rs = pstmt.executeQuery();

            if (rs.next()) {
                String stockID = rs.getString("ID");
                manage_ID.setText(stockID);
                String ithemStock = rs.getString("stock");
                manage_changeCount.setText(ithemStock);
                String ithemName = rs.getString("ithemName");
                manage_name.setText(ithemName);
                String ithem_brand = rs.getString("ithemBrand");
                String ithem_price = rs.getString("ithemPrce");
                String ithem_discount = rs.getString("ithemDiscount");

                ithemStatus.setText("Ithem Name : " + ithemName + "\nthem Brand : " + ithem_brand + "\nIthem Price : " + ithem_price + "\nIthem Discount : " + ithem_discount + "\nIthems Stock : " + ithemStock + "\n");
                manage_ID.setEnabled(false);
            } else {
                JOptionPane.showMessageDialog(null, "No rows found!");
                txtIndex.setEnabled(true);
            }
//            JOptionPane.showMessageDialog(null, "SHOW : " + rs, "Error" ,JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ERROR : " + e, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_stockTableMouseClicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        manage_changeCount.setText("");
    }//GEN-LAST:event_jButton6ActionPerformed

    private void manage_nameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_manage_nameKeyReleased
        // TODO add your handling code here:
        DefaultTableModel obj = (DefaultTableModel) stockTable.getModel();
        TableRowSorter<DefaultTableModel> obj1 = new TableRowSorter<>(obj);
        stockTable.setRowSorter(obj1);
        obj1.setRowFilter(RowFilter.regexFilter(manage_name.getText()));
    }//GEN-LAST:event_manage_nameKeyReleased

    private void btn_customerSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_customerSearchActionPerformed
        // TODO add your handling code here:
        filterCustomerTable();
    }//GEN-LAST:event_btn_customerSearchActionPerformed

    private void search_customIthemsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_search_customIthemsKeyReleased
        // TODO add your handling code here:
        filterCustomerTable();
    }//GEN-LAST:event_search_customIthemsKeyReleased

    private void custom_addCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_custom_addCartActionPerformed
        // TODO add your handling code here:
        addToCart();
        clickRowCustomerTable();
        cartBuySummary();
    }//GEN-LAST:event_custom_addCartActionPerformed

    private void customer_IthemsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customer_IthemsTableMouseClicked
        // TODO add your handling code here:
        selectIthemForCart();
    }//GEN-LAST:event_customer_IthemsTableMouseClicked

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:

        DefaultTableModel model = (DefaultTableModel) customer_IthemsTable.getModel();
        model.setRowCount(0);
        updateCustomerTable();

        DefaultTableModel mode2 = (DefaultTableModel) customer_selectedIthemsTable.getModel();
        mode2.setRowCount(0);
        clickRowCustomerTable();

        cartBuySummary();
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        removeCart();
        DefaultTableModel mode2 = (DefaultTableModel) customer_selectedIthemsTable.getModel();
        mode2.setRowCount(0);
        clickRowCustomerTable();
        cartBuySummary();
        orderSummary.setText("");
    }//GEN-LAST:event_jButton13ActionPerformed

    private void customer_selectedIthemsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customer_selectedIthemsTableMouseClicked
        // TODO add your handling code here:
        cartSummary();
    }//GEN-LAST:event_customer_selectedIthemsTableMouseClicked

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        clearCart();
        DefaultTableModel mode2 = (DefaultTableModel) customer_selectedIthemsTable.getModel();
        mode2.setRowCount(0);
        clickRowCustomerTable();
        cartBuySummary();
    }//GEN-LAST:event_jButton14ActionPerformed

    private void cartSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cartSearchKeyReleased
        // TODO add your handling code here:
        serchCart();
    }//GEN-LAST:event_cartSearchKeyReleased

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        serchCart();
    }//GEN-LAST:event_jButton11ActionPerformed

    private void addDiscountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDiscountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addDiscountActionPerformed

    private void addDiscountMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addDiscountMouseClicked
        // TODO add your handling code here:
        clickRowCustomerTable();
        cartBuySummary();
        if (addDiscount.isSelected()) {
            addDiscount.setText("Add Discount");
            customDiscount.setEnabled(false);
            customDiscount.setSelected(false);
            txtCustomDiscount.setEnabled(false);
        } else {
            addDiscount.setText("No Discount");
            customDiscount.setEnabled(true);
            customDiscount.setSelected(false);
            txtCustomDiscount.setEnabled(false);
        }

    }//GEN-LAST:event_addDiscountMouseClicked

    private void customDiscountMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customDiscountMouseClicked
        // TODO add your handling code here:
//        customDiscount.setSelected(false);
        if (customDiscount.isSelected()) {
            txtCustomDiscount.setEnabled(true);
//            addDiscount.setText("Add Discount");
//            customDiscount.setSelected(false);
        } else {
            txtCustomDiscount.setEnabled(false);
//            addDiscount.setText("No Discount");
//            customDiscount.setSelected(true);
        }
    }//GEN-LAST:event_customDiscountMouseClicked

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        // TODO add your handling code here:
        buyIthems();
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        cartBuySummary();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void txtCustomDiscountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCustomDiscountKeyReleased
        // TODO add your handling code here:
        cartBuySummary();
    }//GEN-LAST:event_txtCustomDiscountKeyReleased

    /**
     * @param args the command line arguments
     */
//    
//-----------------------Customers---------------------------------------    
//  
    public void manageIthem() {

//            int balanceBuyIthems = ithemCount - int_balanceCount;
//            JOptionPane.showMessageDialog(null, "round 3", "Error", JOptionPane.ERROR_MESSAGE);
//            String query3 = "UPDATE ithems set stock='" + balanceBuyIthems + "' WHERE ID='" + i_id + "'";
//            Class.forName("com.mysql.cj.jdbc.Driver");
//            Connection connection3 = DriverManager.getConnection(url, user, password);
//            Statement statement3 = connection.createStatement();
//            int rowsUpdated = statement.executeUpdate(query3);
//            System.out.println(rowsUpdated + " rows updated.");
//
////            JOptionPane.showMessageDialog(null, "SHOW : " + rs, "Error" ,JOptionPane.ERROR_MESSAGE);
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, "CALCULATION ERROR : " + e, "Error", JOptionPane.ERROR_MESSAGE);
//        }
    }

    public void buyIthems() {
        try {
            String url = lblLink.getText() + ":" + lblPort.getText() + "/shop";
            String user = lblUser.getText();
            String password = lblPassword.getText();

            String query = "SELECT * FROM cart";
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection connection = DriverManager.getConnection(url, user, password);
            Statement statement = connection.createStatement();
            ResultSet result = statement.executeQuery(query);
            DefaultTableModel model = (DefaultTableModel) customer_selectedIthemsTable.getModel();

            while (result.next()) {
                String i_id = result.getString(1);
                int int_balanceID = Integer.parseInt(i_id);
                String i_Count = result.getString(4);
                int int_balanceCount = Integer.parseInt(i_Count);

                int ithemCount = 0;
                try {
                    Connection con = DriverManager.getConnection(url, user, password);
                    String query2 = "SELECT * FROM ithems WHERE ID = ?";
                    PreparedStatement pstmt2 = con.prepareStatement(query2);
                    pstmt2.setInt(1, int_balanceID); // set the value of the first parameter to 1
                    ResultSet rs = pstmt2.executeQuery();
                    if (rs.next()) {
                        String ithem_count = rs.getString("stock");
                        ithemCount = Integer.parseInt(ithem_count);

//                            JOptionPane.showMessageDialog(null, "DB ithem: " + ithem_count, "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "COUNT Error: " + e, "Error", JOptionPane.ERROR_MESSAGE);
                }

                try {
                    int unit = ithemCount - int_balanceCount;
                    String query3 = "UPDATE ithems set stock='" + unit + "' WHERE ID='" + i_id + "'";
                    Class.forName("com.mysql.cj.jdbc.Driver");
                    Connection connection3 = DriverManager.getConnection(url, user, password);
                    Statement statement3 = connection3.createStatement();
                    int rowsUpdated = statement3.executeUpdate(query3);
                    System.out.println(rowsUpdated + " rows updated.");
                } catch (Exception e) {
                }

//                JOptionPane.showMessageDialog(null, "ithems:" + int_balanceID + " | " + int_balanceCount + " | " + ithemCount, "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "BUY Error: " + e, "Error", JOptionPane.ERROR_MESSAGE);
        }

    }

    public void cartBuySummary() {
        float totalPrice = 0;
        try {
            String url = lblLink.getText() + ":" + lblPort.getText() + "/shop";
            String user = lblUser.getText();
            String password = lblPassword.getText();

            String query = "SELECT * FROM cart";
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection connection = DriverManager.getConnection(url, user, password);
            Statement statement = connection.createStatement();
            ResultSet result = statement.executeQuery(query);
            DefaultTableModel model = (DefaultTableModel) customer_selectedIthemsTable.getModel();

            while (result.next()) {
                if (addDiscount.isSelected()) {
                    String o_price = result.getString(7);
                    int int_Oprice = Integer.parseInt(o_price);
                    totalPrice = totalPrice + int_Oprice;
                } else {
                    String o_price = result.getString(6);
                    int int_Oprice = Integer.parseInt(o_price);
                    totalPrice = totalPrice + int_Oprice;
                }
            }
            if (customDiscount.isSelected()) {
                try {
                    String cus_discount = txtCustomDiscount.getText();
                    Float float_cuDiscount = Float.parseFloat(cus_discount);
                    Float floatCuDiscount = float_cuDiscount / 100;

                    Float total_Price = totalPrice * floatCuDiscount;
                    totalPrice = totalPrice - total_Price;
                } catch (Exception e) {
                    viewTotalPrice.setText("Totalaing Error");
                }

            }
            viewTotalPrice.setText(": " + totalPrice);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void calculatePrice() {
        try {
            String url = lblLink.getText() + ":" + lblPort.getText() + "/shop";
            String user = lblUser.getText();
            String password = lblPassword.getText();

            String query = "SELECT * FROM cart";
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection connection = DriverManager.getConnection(url, user, password);
            Statement statement = connection.createStatement();
            ResultSet result = statement.executeQuery(query);

            while (result.next()) {

            }

        } catch (Exception e) {
        }
    }

    public void serchCart() {
        DefaultTableModel obj = (DefaultTableModel) customer_selectedIthemsTable.getModel();
        TableRowSorter<DefaultTableModel> obj1 = new TableRowSorter<>(obj);
        customer_selectedIthemsTable.setRowSorter(obj1);
        obj1.setRowFilter(RowFilter.regexFilter(cartSearch.getText()));
    }

    public void clearCart() {
        try {
            String url = lblLink.getText() + ":" + lblPort.getText() + "/shop";
            String user = lblUser.getText();
            String password = lblPassword.getText();

            String query = "TRUNCATE TABLE `cart`";
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection connection = DriverManager.getConnection(url, user, password);
            Statement statement = connection.createStatement();
            statement.executeUpdate(query);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void cartSummary() {
//        String rm_id = txtIndex.getText();

        String url = lblLink.getText() + ":" + lblPort.getText() + "/shop";
        String user = lblUser.getText();
        String password = lblPassword.getText();

        try {
            int index = customer_selectedIthemsTable.getSelectedRow();

            TableModel model = customer_selectedIthemsTable.getModel();

            String table_id = model.getValueAt(index, 0).toString();
            String table_ithemName = model.getValueAt(index, 1).toString();
            String table_ithemBrand = model.getValueAt(index, 2).toString();
            String table_ithemcount = model.getValueAt(index, 3).toString();
            String table_price = model.getValueAt(index, 4).toString();
            String table_lavel = model.getValueAt(index, 5).toString();
            int int_tableLavel = Integer.parseInt(table_lavel);

            orderSummary.setText("ID \t: " + table_id + "\nIthem Name \t: " + table_ithemName + "\nBrand \t: " + table_ithemBrand + "\nIthem Count \t: " + table_ithemcount + "\nIthem Price \t: " + table_price);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ERROR :" + e, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void removeCart() {
        String rm_id = txtIndex.getText();
        String url = lblLink.getText() + ":" + lblPort.getText() + "/shop";
        String user = lblUser.getText();
        String password = lblPassword.getText();
        try {
            int index = customer_selectedIthemsTable.getSelectedRow();

            TableModel model = customer_selectedIthemsTable.getModel();

            String table_id = model.getValueAt(index, 0).toString();
            String table_ithemName = model.getValueAt(index, 1).toString();
            String table_ithemBrand = model.getValueAt(index, 2).toString();
            String table_ithemcount = model.getValueAt(index, 3).toString();
            String table_price = model.getValueAt(index, 4).toString();
            String table_lavel = model.getValueAt(index, 5).toString();
            int int_tableLavel = Integer.parseInt(table_lavel);

            orderSummary.setText("ID \t: " + table_id + "\nIthem Name \t: " + table_ithemName + "\nBrand \t: " + table_ithemBrand + "\nIthem Count \t: " + table_ithemcount + "\nIthem Price \t: " + table_price);

            String query = "DELETE FROM cart WHERE I_index =" + int_tableLavel + " ";

            Connection conn = DriverManager.getConnection(url, user, password);
            Statement stmt = conn.createStatement();
            int rowsAffected = stmt.executeUpdate(query);
            System.out.println(rowsAffected + " rows affected");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ERROR :" + e, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void addToCart() {
        try {
            int index = customer_IthemsTable.getSelectedRow();
            TableModel model = customer_IthemsTable.getModel();

            String table_id = model.getValueAt(index, 0).toString();
            int int_tableId = Integer.parseInt(table_id);

            String table_ithemName = model.getValueAt(index, 1).toString();

            String table_ithemBrand = model.getValueAt(index, 2).toString();

            String table_ithemPrice = model.getValueAt(index, 3).toString();
            int int_table_ithemPrice = Integer.parseInt(table_ithemPrice);

            String table_Discount = model.getValueAt(index, 4).toString();
            float flt_table_Discount = Float.parseFloat(table_Discount);

            String table_ithemCount = model.getValueAt(index, 5).toString();

            String ithemCount = ithem_count.getText();
            int int_ithemCount = Integer.parseInt(ithemCount);

            String url = lblLink.getText() + ":" + lblPort.getText() + "/shop";
            String user = lblUser.getText();
            String password = lblPassword.getText();
            Connection conn = null;
            int count = 1;
            try {
//                calcumation = price * ithem count - (price * ithem count * discount)
                int the_price = int_table_ithemPrice * int_ithemCount;

                flt_table_Discount = flt_table_Discount / 100;
                float presentDiscount = 100 - flt_table_Discount;
                float priceDiscount = the_price * flt_table_Discount;
                float chkDiscount = int_table_ithemPrice * int_ithemCount - priceDiscount;

//                customerSummary.setText(int_table_ithemPrice + " * " + int_ithemCount + " - (" + int_table_ithemPrice + "*" + int_ithemCount + "*" + flt_table_Discount + "%)");
                String query = "INSERT INTO cart (ID, Ithem, Brand, IthemCount, price, price_discount)VALUES (" + int_tableId + ", '" + table_ithemName + "', '" + table_ithemBrand + "', " + int_ithemCount + ", " + the_price + ", " + chkDiscount + ");";
//                String query = "INSERT INTO table_name (column1, column2, column3)VALUES (" + int_tableId + ", '" + table_ithemName + "', '" + table_ithemBrand + "', " + int_ithemCount + ")";
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection connection = DriverManager.getConnection(url, user, password);
                Statement statement = connection.createStatement();
                statement.executeUpdate(query);
                clear_ithem();
                table_ithems();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error: " + e, "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void selectIthemForCart() {
        cartBuySummary();
        try {
            int index = customer_IthemsTable.getSelectedRow();

            TableModel model = customer_IthemsTable.getModel();

            String table_id = model.getValueAt(index, 0).toString();
            String table_ithemName = model.getValueAt(index, 1).toString();
            String table_ithemBrand = model.getValueAt(index, 2).toString();
            String table_ithemPrice = model.getValueAt(index, 3).toString();
            String table_Discount = model.getValueAt(index, 4).toString();
            String table_ithemCount = model.getValueAt(index, 5).toString();

            customerSummary.setText("ID \t: " + table_id + "\nDiscount \t: " + table_Discount + "\nBrand \t: " + table_ithemBrand + "\nIthem Name \t: " + table_ithemName + "\nIthem Price \t: " + table_ithemPrice);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void filterCustomerTable() {
//        search_customIthems
        DefaultTableModel obj = (DefaultTableModel) customer_IthemsTable.getModel();
        TableRowSorter<DefaultTableModel> obj1 = new TableRowSorter<>(obj);
        customer_IthemsTable.setRowSorter(obj1);
        obj1.setRowFilter(RowFilter.regexFilter(search_customIthems.getText()));
    }

    public void clickRowCustomerTable() {
        int int_price = 0;
        try {
            String url = lblLink.getText() + ":" + lblPort.getText() + "/shop";
            String user = lblUser.getText();
            String password = lblPassword.getText();

            String query = "SELECT * FROM cart";
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection connection = DriverManager.getConnection(url, user, password);
            Statement statement = connection.createStatement();
            ResultSet result = statement.executeQuery(query);
            DefaultTableModel model = (DefaultTableModel) customer_selectedIthemsTable.getModel();
            model.setRowCount(0);

            while (result.next()) {
                String i_id = result.getString(1);
                int int_id = Integer.parseInt(i_id);

                String i_name = result.getString(2);

                String i_brand = result.getString(3);

                String i_count = result.getString(4);
                int int_iCount = Integer.parseInt(i_count);
//                String numbeing = result.getString(5);
//                int int_numbering = Integer.parseInt(numbeing);

                if (addDiscount.isSelected()) {
                    String i_price = result.getString(7);
                    int_price = Integer.parseInt(i_price);
                } else {
                    String i_price = result.getString(6);
                    int_price = Integer.parseInt(i_price);
                }
                String numbeing = result.getString(5);
                int int_numbering = Integer.parseInt(numbeing);

                Object[] rowData = {int_id, i_name, i_brand, int_iCount, int_price, int_numbering};
                rowData = new Object[]{int_id, i_name, i_brand, int_iCount, int_price, int_numbering};
//                     i_brand, int_price, flt_discount
                model.addRow(rowData);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void updateCustomerTable() {
        String url = lblLink.getText() + ":" + lblPort.getText() + "/shop";
        String user = lblUser.getText();
        String password = lblPassword.getText();

        try {
            String query = "SELECT * FROM ithems";
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection connection = DriverManager.getConnection(url, user, password);
            Statement statement = connection.createStatement();
            ResultSet result = statement.executeQuery(query);

//            JOptionPane.showMessageDialog(null,"result : " + result, "Error", JOptionPane.ERROR_MESSAGE);
            DefaultTableModel model = (DefaultTableModel) customer_IthemsTable.getModel();
            model.setRowCount(0);

            while (result.next()) {
                String i_id = result.getString(1);
                int int_id = Integer.parseInt(i_id);

                String i_name = result.getString(2);

                String i_brand = result.getString(3);

                String i_price = result.getString(4);
                int int_iPrice = Integer.parseInt(i_price);

                String i_discount = result.getString(5);
                float flt_iDiscount = Float.parseFloat(i_discount);

                String i_count = result.getString(6);
                int int_count = Integer.parseInt(i_count);

                Object[] rowData = {int_id, i_name, i_brand, int_iPrice, flt_iDiscount, int_count};
                rowData = new Object[]{int_id, i_name, i_brand, int_iPrice, flt_iDiscount, int_count};
//                     i_brand, int_price, flt_discount
                model.addRow(rowData);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

//    
//-----------------------Ithem Management---------------------------------------    
//  
    public void stock_filter() {
        try {
            int index = ithemTable.getSelectedRow();

            TableModel model = ithemTable.getModel();

            String table_id = model.getValueAt(index, 0).toString();
            String table_ithemName = model.getValueAt(index, 1).toString();
            String table_ithemBrand = model.getValueAt(index, 2).toString();
            String table_ithemPrice = model.getValueAt(index, 3).toString();
            String Table_Discount = model.getValueAt(index, 4).toString();

            txtIndex.setText(table_id);
            txtName.setText(table_ithemName);
            txtBrand.setText(table_ithemBrand);
            txtPrice.setText(table_ithemPrice);
            txtDiscount.setText(Table_Discount);
            jButton8.setEnabled(true);
            txtIndex.setEnabled(false);
        } catch (Exception e) {
        }

    }

    public void stock_clear() {
        manage_ID.setText("");
        manage_name.setText("");
        manage_changeCount.setText("");
        ithemStatus.setText("");
        manage_ID.setEnabled(true);

    }

    public void stock_search() {
        String manageID = manage_ID.getText();
        int int_manageID = Integer.parseInt(manageID);

        String url = lblLink.getText() + ":" + lblPort.getText() + "/shop";
        String user = lblUser.getText();
        String password = lblPassword.getText();

        if (manage_ID.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "ERROR : Check index", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            try {

                Connection con = DriverManager.getConnection(url, user, password);
                String query = "SELECT * FROM ithems WHERE ID = ?";
                PreparedStatement pstmt = con.prepareStatement(query);
                pstmt.setInt(1, int_manageID); // set the value of the first parameter to 1
                ResultSet rs = pstmt.executeQuery();

                if (rs.next()) {
                    String ithemStock = rs.getString("stock");
                    manage_changeCount.setText(ithemStock);

                    String ithemName = rs.getString("ithemName");
                    manage_name.setText(ithemName);

                    String ithem_brand = rs.getString("ithemBrand");
                    String ithem_price = rs.getString("ithemPrce");
                    String ithem_discount = rs.getString("ithemDiscount");

                    ithemStatus.setText("Ithem Name : " + ithemName + "\nthem Brand : " + ithem_brand + "\nIthem Price : " + ithem_price + "\nIthem Discount : " + ithem_discount + "\nIthems Stock : " + ithemStock + "\n");
                    manage_ID.setEnabled(false);
                } else {
                    JOptionPane.showMessageDialog(null, "No rows found!");
                    txtIndex.setEnabled(true);
                }
//            JOptionPane.showMessageDialog(null, "SHOW : " + rs, "Error" ,JOptionPane.ERROR_MESSAGE);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "ERROR : " + e, "Error", JOptionPane.ERROR_MESSAGE);
            }
        }

    }

    public void stock_management() {
        String manageID = manage_ID.getText();
        int int_manageID = Integer.parseInt(manageID);
        String manageName = manage_name.getText();
        String manageChange = manage_changeCount.getText();
        int int_manageChange = Integer.parseInt(manageChange);

        String url = lblLink.getText() + ":" + lblPort.getText() + "/shop";
        String user = lblUser.getText();
        String password = lblPassword.getText();
        Connection conn = null;

        try {
            DefaultTableModel model = (DefaultTableModel) stockTable.getModel();
            model.setRowCount(0);

            String query = "UPDATE ithems set stock='" + int_manageChange + "' WHERE ID='" + int_manageID + "'";
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection connection = DriverManager.getConnection(url, user, password);
            Statement statement = connection.createStatement();
            int rowsUpdated = statement.executeUpdate(query);
            System.out.println(rowsUpdated + " rows updated.");
            clear_ithem();
            stock_clear();
            table_manageIthem();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e, "Error", JOptionPane.ERROR_MESSAGE);
        }

    }

    public void table_manageIthem() {
        String url = lblLink.getText() + ":" + lblPort.getText() + "/shop";
        String user = lblUser.getText();
        String password = lblPassword.getText();

        try {
            String query = "SELECT * FROM ithems";
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection connection = DriverManager.getConnection(url, user, password);
            Statement statement = connection.createStatement();
            ResultSet result = statement.executeQuery(query);

//            JOptionPane.showMessageDialog(null,"result : " + result, "Error", JOptionPane.ERROR_MESSAGE);
            DefaultTableModel model = (DefaultTableModel) stockTable.getModel();
            model.setRowCount(0);

            while (result.next()) {
                String i_id = result.getString(1);
                int int_id = Integer.parseInt(i_id);
                String i_name = result.getString(2);
                String i_brand = result.getString(3);
                String i_count = result.getString(6);
                int int_count = Integer.parseInt(i_count);
                Object[] rowData = {int_id, i_name, i_brand, int_count};
                rowData = new Object[]{int_id, i_name, i_brand, int_count};
//                     i_brand, int_price, flt_discount
                model.addRow(rowData);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

//    
//-----------------------Add New---------------------------------------    
//  
    public void ithems_delet() {
        String rm_id = txtIndex.getText();

        if (rm_id.equals("")) {
            JOptionPane.showMessageDialog(null, "ERROR : Check index|" + rm_id + "|", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            String url = lblLink.getText() + ":" + lblPort.getText() + "/shop";
            String user = lblUser.getText();
            String password = lblPassword.getText();

            int rmId = Integer.parseInt(rm_id);
            try {
                String query = "DELETE FROM ithems WHERE ID ='" + rmId + "' ";

                Connection conn = DriverManager.getConnection(url, user, password);
                Statement stmt = conn.createStatement();
                int rowsAffected = stmt.executeUpdate(query);
                System.out.println(rowsAffected + " rows affected");

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "ERROR :" + e, "Error", JOptionPane.ERROR_MESSAGE);
            }

        }
    }

    public void ithem_search() {
        String url = lblLink.getText() + ":" + lblPort.getText() + "/shop";
        String user = lblUser.getText();
        String password = lblPassword.getText();

        if (txtIndex.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "ERROR : Check index", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
//                txtIndex.setEnabled(false);
                jButton1.setText("EDIT");
                String str_id = txtIndex.getText();
                int int_id = Integer.parseInt(str_id);

                Connection con = DriverManager.getConnection(url, user, password);
                String query = "SELECT * FROM ithems WHERE ID = ?";
                PreparedStatement pstmt = con.prepareStatement(query);
                pstmt.setInt(1, int_id); // set the value of the first parameter to 1
                ResultSet rs = pstmt.executeQuery();
                txtIndex.setEnabled(false);

                if (rs.next()) {
                    String ithem_name = rs.getString("ithemName");
                    txtName.setText(ithem_name);

                    String ithem_brand = rs.getString("ithemBrand");
                    txtBrand.setText(ithem_brand);

                    String ithem_price = rs.getString("ithemPrce");
                    txtPrice.setText(ithem_price);

                    String ithem_discount = rs.getString("ithemDiscount");
                    txtDiscount.setText(ithem_discount);
                    jButton8.setEnabled(true);
                } else {
                    JOptionPane.showMessageDialog(null, "No rows found!");
                    txtIndex.setEnabled(true);
                }
//            JOptionPane.showMessageDialog(null, "SHOW : " + rs, "Error" ,JOptionPane.ERROR_MESSAGE);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "ERROR : " + e, "Error", JOptionPane.ERROR_MESSAGE);
            }
        }

    }

    public void table_ithems() {
//        ithemTable
        String url = lblLink.getText() + ":" + lblPort.getText() + "/shop";
        String user = lblUser.getText();
        String password = lblPassword.getText();

        try {
            String query = "SELECT * FROM ithems";
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection connection = DriverManager.getConnection(url, user, password);
            Statement statement = connection.createStatement();
            ResultSet result = statement.executeQuery(query);

//            JOptionPane.showMessageDialog(null,"result : " + result, "Error", JOptionPane.ERROR_MESSAGE);
            DefaultTableModel model = (DefaultTableModel) ithemTable.getModel();
            model.setRowCount(0);

            while (result.next()) {
                String i_id = result.getString(1);
                int int_id = Integer.parseInt(i_id);
                String i_name = result.getString(2);
                String i_brand = result.getString(3);
                String i_price = result.getString(4);
                int int_price = Integer.parseInt(i_price);
                String i_discount = result.getString(5);
                float flt_discount = Float.parseFloat(i_discount);
                Object[] rowData = {int_id, i_name, i_brand, int_price, flt_discount};
                rowData = new Object[]{int_id, i_name, i_brand, int_price, flt_discount};
//                     i_brand, int_price, flt_discount
                model.addRow(rowData);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: " + e, "Error", JOptionPane.ERROR_MESSAGE);
        }

    }

    public void clear_ithem() {
        txtIndex.setText("");
        txtName.setText("");
        txtBrand.setText("");
        txtPrice.setText("");
        txtDiscount.setText("");
        txtIndex.setEnabled(true);
        jButton8.setEnabled(false);
        jButton1.setText("SAVE");
    }

    public void addData() {
        String url = lblLink.getText() + ":" + lblPort.getText() + "/shop";
        String user = lblUser.getText();
        String password = lblPassword.getText();
        Connection conn = null;

        String ithem_id = txtIndex.getText();
        String ithem_name = txtName.getText();
        String ithem_brand = txtBrand.getText();
        String ithem_price = txtPrice.getText();
        String ithem_discount = txtDiscount.getText();
        float flt_ithem_discount = Float.parseFloat(ithem_discount);

        int int_ithem_id = Integer.parseInt(ithem_id);

        if (jButton1.getText() == "SAVE") {
            if (flt_ithem_discount < 101.0) {
                if (ithem_id.equals("") || ithem_name.equals("") || ithem_brand.equals("") || ithem_price.equals("") || ithem_discount.equals("")) {
                    JOptionPane.showMessageDialog(null, "Check Enterd Values!");
                } else {
                    try {
                        String query = "INSERT INTO ithems VALUES ('" + int_ithem_id + "','" + ithem_name + "', '" + ithem_brand + "', '" + ithem_price + "', '" + ithem_discount + "', '" + 0 + "')";
                        Class.forName("com.mysql.cj.jdbc.Driver");
                        Connection connection = DriverManager.getConnection(url, user, password);
                        Statement statement = connection.createStatement();
                        statement.executeUpdate(query);
                        clear_ithem();
                        table_ithems();
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, "Error: " + e, "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "Error: Discount Amount is 100+ check it!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        if (jButton1.getText() == "EDIT") {
            if (flt_ithem_discount < 101.0) {
//            JOptionPane.showMessageDialog(null, "edit", "Error", JOptionPane.ERROR_MESSAGE);
                try {
                    String query = "UPDATE ithems set ithemName='" + ithem_name + "' ,ithemBrand='" + ithem_brand + "' ,ithemPrce='" + ithem_price + "' ,ithemDiscount='" + ithem_discount + "' WHERE ID='" + int_ithem_id + "'";
                    Class.forName("com.mysql.cj.jdbc.Driver");
                    Connection connection = DriverManager.getConnection(url, user, password);
                    Statement statement = connection.createStatement();
                    int rowsUpdated = statement.executeUpdate(query);
                    System.out.println(rowsUpdated + " rows updated.");
                    clear_ithem();
                    table_ithems();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Error: " + e, "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Error: Discount Amount is 100+ check it!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }

    }
//    
//-----------------------LOGIN---------------------------------------    
//  

    public void connect() {

        try {
            lblstatus_login.setText("Scaning...");
            String url = lblLink.getText() + ":" + lblPort.getText() + "/";
            String user = lblUser.getText();
            String password = lblPassword.getText();
            Connection conn = null;
            Class.forName("com.mysql.jdbc.Driver");
            conn = DriverManager.getConnection(url, user, password);
            lblstatus_login.setText("Connection successful!");
            btnStop.setEnabled(true);
            //            System.out.println("Connection successful!");
        } catch (Exception e) {
            lblstatus_login.setText("Connection failed!");
            JOptionPane.showMessageDialog(null, "Error: " + e, "Error", JOptionPane.ERROR_MESSAGE);
        }
        //            System.err.println("Connection failed!");
        //            e.printStackTrace();
//        } finally {
//            try {
//                conn.close();
//            } catch (SQLException e) {
//                lblstatus_login.setText("ERROR : " + e);
//            }
//        }

    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(home.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(home.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(home.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(home.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox addDiscount;
    private javax.swing.JButton btnStart;
    private javax.swing.JButton btnStart1;
    private javax.swing.JButton btnStop;
    private javax.swing.JButton btn_customerSearch;
    private javax.swing.JTextField cartSearch;
    private javax.swing.JCheckBox customDiscount;
    private javax.swing.JButton custom_addCart;
    private javax.swing.JTextArea customerSummary;
    private javax.swing.JTable customer_IthemsTable;
    private javax.swing.JTable customer_selectedIthemsTable;
    private javax.swing.JTextArea ithemStatus;
    private javax.swing.JTable ithemTable;
    private javax.swing.JTextField ithem_count;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField lblLink;
    private javax.swing.JPasswordField lblPassword;
    private javax.swing.JTextField lblPort;
    private javax.swing.JTextField lblUser;
    private javax.swing.JLabel lblstatus_login;
    private javax.swing.JTextField manage_ID;
    private javax.swing.JTextField manage_changeCount;
    private javax.swing.JTextField manage_name;
    private javax.swing.JTextArea orderSummary;
    private javax.swing.JTextField search_customIthems;
    private javax.swing.JTable stockTable;
    private javax.swing.JTextField txtBrand;
    private javax.swing.JTextField txtCustomDiscount;
    private javax.swing.JTextField txtDiscount;
    private javax.swing.JTextField txtIndex;
    private javax.swing.JTextArea txtName;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField viewTotalPrice;
    // End of variables declaration//GEN-END:variables
}
